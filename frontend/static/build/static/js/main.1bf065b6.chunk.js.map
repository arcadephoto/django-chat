{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","text","textInput","editInput","room","editID","username","email","password1","password2","password","isLoggedIn","Cookies","get","loggedInUserName","roomname","roomlist","handleLogout","bind","handleRegistration","handleInput","handleChange","submit","edit","delete","createChat","event","this","setState","target","name","value","fetch","then","response","json","localStorage","getItem","preventDefault","method","headers","body","JSON","stringify","window","location","reload","id","e","obj","a","options","handleError","err","console","warn","catch","data","key","set","setItem","remove","removeItem","map","className","type","placeholder","onChange","onClick","user","textButton","onSubmit","htmlFor","editButton","registerForm","loginForm","handleLogin","logoutForm","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf065b6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor (props){\n      super(props);\n      this.state = {\n        text: [],\n        textInput: [],\n        editInput: [],\n        room: \"\",\n        editID: \"\",\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n        password: '',\n        isLoggedIn: !!Cookies.get('Authorization'),\n        loggedInUserName: null,\n        roomname: \"\",\n        roomlist: [],\n      }\n  this.handleLogout = this.handleLogout.bind(this);\n  this.handleRegistration = this.handleRegistration.bind(this);\n  this.handleInput = this.handleInput.bind(this);\n  this.handleChange = this.handleChange.bind(this);\n  this.submit = this.submit.bind(this);\n  this.edit = this.edit.bind(this);\n  this.delete = this.delete.bind(this);\n  this.createChat = this.createChat.bind(this);\n    }\n\nhandleInput(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n\nhandleChange(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n\ncomponentDidMount(){\n  fetch(\"/api/v1/chatapp/chat/\")\n      .then(response => response.json())\n      .then(response => this.setState({text: response}));\n      if(localStorage.getItem('chatUser')){\n        this.setState({isLoggedIn: true})};\n        this.setState({loggedInUserName: localStorage.getItem('chatUser')})\n\n  fetch(\"/api/v1/chatapp/room/\")\n      .then(response => response.json())\n      .then(response => this.setState({roomlist: response}));\n\n      }\n\n\n\nsubmit(event){\n  event.preventDefault()\n  fetch(\"/api/v1/chatapp/post/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({text: this.state.textInput}),\n    })\n    .then(response => response.json())\nthis.setState({username: \"\", textInput: \"\"})\nwindow.location.reload();\n}\n\nedit(event){\n  event.preventDefault()\n  fetch(`/api/v1/chatapp/${this.state.editID}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({text: this.state.editInput, id: this.state.editID}),\n    })\n}\n\ndelete(target){\n  // event.preventDefault();\n  fetch(`/api/v1/chatapp/${target}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    })\n}\n\nasync handleRegistration(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/registration/', options);\nconst data = await response.json().catch(handleError);\n\nif(data.key) {\nCookies.set('Authorization', `Token ${data.key}`);\n}\nthis.setState({username: \"\", email: \"\", password1: \"\", password2: \"\"})\n}\n\nasync handleLogin(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/login/', options);\nconst data = await response.json().catch(handleError);\n\nif(data.key) {\nCookies.set('Authorization', `Token ${data.key}`);\nlocalStorage.setItem('chatUser', this.state.username)\n}\n\nthis.setState({username: \"\", password: \"\",})\nwindow.location.reload()\n}\n\nasync handleLogout(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/logout/', options);\nconst data = await response.json().catch(handleError);\n\n\nCookies.remove('Authorization', `Token ${data.key}`);\nlocalStorage.removeItem('chatUser')\nthis.setState({isLoggedIn: false});\nthis.setState({loggedInUserName: \"\",});\n\nthis.setState({username: \"\",})\n}\n\n\ncreateChat(event){\n    event.preventDefault()\n    fetch(\"/api/v1/chatapp/room/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify({roomname: this.state.roomname}),\n      })\n      .then(response => response.json())\n  }\n\n\n\n\n\n  render(){\n\n    const roomlist = this.state.roomlist.map((data) =>(\n\n      <section className=\"card\" key={data.id}>\n          <p>{data.roomname}</p>\n          </section>\n        ))\n\n    const createChat = (<div>\n<input type=\"text\" placeholder=\"Name of new chatroom\" id=\"roomname\" name=\"roomname\" value={this.state.roomname} onChange={this.handleChange}/>\n    <button onClick={this.createChat}>Create Chat Room</button></div>)\n\n    const text = this.state.text.map((data) => (\n      <section className=\"card\" key={data.id}>\n      <p>ChatRoom: {data.roomname}</p>\n      <p>Sender: {data.user}</p>\n      <p>Message: {data.text}</p>\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={()=> this.delete(data.id)}>Delete</button></section>\n    ))\n\n\n    const textButton = <form onSubmit={this.submit}>\n       <label htmlFor=\"sendText\"></label>\n       <p><input type=\"text\" placeholder=\"Input text here\" id=\"sendText\" name=\"textInput\" value={this.state.textInput} onChange={this.handleChange}/></p>\n       <p><button className=\"btn-primary btn\" type=\"submit\">Send your text</button></p>\n       </form>\n\n   const editButton = <form onSubmit={this.edit}>\n      <label htmlFor=\"editText\"></label>\n      <p><input placeholder=\"txt id\" id=\"editID\" name=\"editID\" value={this.state.editID} onChange={this.handleChange}/></p>\n      <p><input type=\"text\" placeholder=\"Edit text here\" id=\"editText\" name=\"editInput\" value={this.state.editInput} onChange={this.handleChange}/></p>\n      <p><button className=\"btn-primary btn\" type=\"submit\">Send your edit</button></p>\n      </form>\n\n\n\n  const registerForm = (<form onSubmit={(e) => this.handleRegistration(e, this.state)}>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"confirm pass\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n      <p><button className=\"btn-primary btn\" type=\"submit\">Register</button></p>\n      </form>)\n\n  const loginForm = (<form onSubmit={(e) => this.handleLogin(e, this.state)}>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n      <p><button className=\"btn btn-primary\" type=\"submit\">Log In</button></p>\n      </form>)\n\n  const logoutForm = (<form onSubmit={(e) => this.handleLogout(e, this.state)}>\n      <button className=\"btn-primary\" type=\"submit\">Log Out</button>\n      </form>)\n\n  const loggedInUserName = <p>Hello, {this.state.loggedInUserName}!</p>\n\n  return (\n    <div className=\"container\">\n    <div className=\"row-12 navbar header\"><h1>Chat 'Em Up!</h1><p>The professional and totally functional chat app</p>\n    <span>{this.state.isLoggedIn === false ? loginForm : null}</span><span>{this.state.isLoggedIn !== false ? logoutForm : null }</span>\n    {this.state.loggedInUserName ? loggedInUserName : null}\n    </div>\n    <div className=\"row\">\n    <div className=\"col-4 card\">{this.state.isLoggedIn !== false ? textButton : <h4>Welcome! Please register or log in!</h4>}</div>\n    <div className=\"col-4\">{this.state.isLoggedIn !== false ? editButton : null}</div>\n    <div className=\"col-4 card\">{!localStorage.getItem('chatUser') ? registerForm : null}</div>\n    </div>\n\n    <div className=\"row\">\n    <div className=\"col-3 card\"> </div>\n\n      </div>\n\n      <div className=\"row\">{createChat}\n      <div className=\"col-9\"> {this.state.isLoggedIn !== false ? text : null }</div>\n      <div className=\"col-3\"><h4>Available Chatrooms</h4>\n      {roomlist}</div>\n      </div>\n      </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}