{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","text","textInput","editInput","room","editID","username","email","password1","password2","password","loggedInUserName","handleLogout","bind","handleRegistration","handleInput","handleChange","submit","edit","delete","event","this","setState","target","name","value","fetch","then","response","json","method","headers","body","JSON","stringify","id","e","obj","a","preventDefault","options","Cookies","get","handleError","err","console","warn","catch","data","key","set","remove","log","map","owner","textButton","onSubmit","htmlFor","type","placeholder","onChange","className","editButton","deleteButton","registerForm","loginForm","handleLogin","logoutForm","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8583567d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nimport './App.css';\n\n// const base_url = \"https://django-text-arcadephoto.herokuapp.com\"\n\nclass App extends Component {\n  constructor (props){\n      super(props);\n      this.state = {\n        text: [],\n        textInput: [],\n        editInput: [],\n        room: \"\",\n        editID: \"\",\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n        password: '',\n        // isLoggedIn: !!Cookies.get('Authorization'),\n        loggedInUserName: '',\n      }\n  this.handleLogout = this.handleLogout.bind(this);\n  this.handleRegistration = this.handleRegistration.bind(this);\n  this.handleInput = this.handleInput.bind(this);\n  this.handleChange = this.handleChange.bind(this);\n  this.submit = this.submit.bind(this);\n  this.edit = this.edit.bind(this);\n  this.delete = this.delete.bind(this);\n    }\n\nhandleInput(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n\nhandleChange(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n\ncomponentDidMount(){\n  fetch(\"/api/v1/chatapp/chat/\")\n      .then(response => response.json())\n      .then(response => this.setState({text: response}));\n    }\n\n\nsubmit(){\n  fetch(\"/api/v1/chatapp/post/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.textInput}),\n    })\n}\n\nedit(){\n  fetch(`/api/v1/chatapp/${this.state.editID}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.editInput, id: this.state.editID}),\n    })\n}\n\ndelete(){\n  fetch(`/api/v1/chatapp/${this.state.editID}/`, {\n      method: 'DELETE',\n    })\n}\n\nasync handleRegistration(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/registration/', options);\nconst data = await response.json().catch(handleError);\n\nif(data.key) {\nCookies.set('Authorization', `Token ${data.key}`);\n}\nthis.setState({username: \"\", email: \"\", password1: \"\", password2: \"\"})\n}\n\nasync handleLogin(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/login/', options);\nconst data = await response.json().catch(handleError);\n\nif(data.key) {\nCookies.set('Authorization', `Token ${data.key}`);\nthis.setState({loggedInUserName: this.state.username})\n}\n\nthis.setState({username: \"\", password: \"\",})\n}\n\nasync handleLogout(e, obj){\ne.preventDefault();\n\nconst options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(obj),\n};\nconst handleError = (err) => console.warn(err);\nconst response = await fetch('/rest-auth/logout/', options);\nconst data = await response.json().catch(handleError);\n\nif(data.key) {\nCookies.remove('Authorization', `Token ${data.key}`);\nthis.setState({loggedInUserName: \"\",});\n}\nthis.setState({username: \"\",})\n}\n\n\n\n  render(){\n    console.log(this.state.text)\n    // console.log(Cookies.get('Authorization'));\n\n    const text = this.state.text.map((data) => (\n      <section key={data.id}>\n      <p>ID No.: {data.id}</p>\n      <p>ChatRoom: {data.room}</p>\n      <p>Sender: {data.owner}</p>\n      <p>Message: {data.text}</p></section>\n    ))\n\n\n    const textButton = <form onSubmit={this.submit}>\n       <label htmlFor=\"sendText\"></label>\n       <input type=\"text\" placeholder=\"Input text here\" id=\"sendText\" name=\"textInput\" value={this.state.textInput} onChange={this.handleChange}/>\n       <input type=\"text\" placeholder=\"Chatroom Name\" id=\"room\" name=\"room\" value={this.state.room} onChange={this.handleChange}/>\n       <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n       <button className=\"btn genbtn\" type=\"submit\">Send your text</button>\n       </form>\n\n\n   const editButton = <form onSubmit={this.edit}>\n      <label htmlFor=\"editText\"></label>\n      <input placeholder=\"txt id\" id=\"editID\" name=\"editID\" value={this.state.editID} onChange={this.handleChange}/>\n      <input type=\"text\" placeholder=\"Edit text here\" id=\"editText\" name=\"editInput\" value={this.state.editInput} onChange={this.handleChange}/>\n      <button className=\"btn genbtn\" type=\"submit\">Send your edit</button>\n      </form>\n\n  const deleteButton = <form onSubmit={this.delete}>\n      <button type=\"submit\" id=\"delete\" name=\"delete\">Delete!</button></form>\n\n\n\n  const registerForm = (<form onSubmit={(e) => this.handleRegistration(e, this.state)}>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"confirm pass\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n      <button type=\"submit\">Register</button>\n      </form>)\n\n  const loginForm = (<form onSubmit={(e) => this.handleLogin(e, this.state)}>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n      <button type=\"submit\">Log In</button>\n      </form>)\n\n  const logoutForm = (<form onSubmit={(e) => this.handleLogout(e, this.state)}>\n      <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <button type=\"submit\">Log Out</button>\n      </form>)\n\n  const loggedInUserName = <p>Logged in: {this.state.loggedInUserName}</p>\n\n  return (\n    <div className=\"App\">\n      {textButton}\n      {editButton}\n      {deleteButton}\n      {registerForm}\n      {loginForm}\n      {logoutForm}\n      {loggedInUserName}\n      {text}\n      </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}