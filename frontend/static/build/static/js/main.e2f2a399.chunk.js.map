{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","text","textInput","editInput","editID","handleChange","bind","submit","edit","delete","event","this","setState","target","name","value","fetch","then","response","json","method","headers","body","JSON","stringify","id","map","data","textButton","onSubmit","htmlFor","type","placeholder","onChange","className","editButton","deleteButton","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAoGeA,E,kDA9Fb,WAAaC,GAAO,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,OAAQ,IAId,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBACZ,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAbK,E,gDAiBrB,SAAaI,GACPC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,+BAGvD,WAAoB,IAAD,OACjBC,MAAM,yBACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKN,SAAS,CAACX,KAAMiB,S,oBAI7C,WACEF,MAAM,wBAAyB,CAC3BI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACvB,KAAMU,KAAKX,MAAME,gB,kBAI7C,WACEc,MAAM,mBAAD,OAAoBL,KAAKX,MAAMI,OAA/B,KAA0C,CAC3CgB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACvB,KAAMU,KAAKX,MAAMG,UAAWsB,GAAId,KAAKX,MAAMI,a,oBAIvE,WACEY,MAAM,mBAAD,OAAoBL,KAAKX,MAAMI,OAA/B,KAA0C,CAC3CgB,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACvB,KAAMU,KAAKX,MAAMG,UAAWsB,GAAId,KAAKX,MAAMI,a,oBAMrE,WACE,IAAMH,EAAOU,KAAKX,MAAMC,KAAKyB,KAAI,SAACC,GAAD,OAC/B,8BAAkBA,EAAK1B,KAAvB,cAAwC0B,EAAKF,KAArCE,EAAKF,OAITG,EAAa,uBAAMC,SAAUlB,KAAKJ,OAArB,UAChB,uBAAOuB,QAAQ,aACf,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBP,GAAG,WAAWX,KAAK,YAAYC,MAAOJ,KAAKX,MAAME,UAAW+B,SAAUtB,KAAKN,eAC5H,wBAAQ6B,UAAU,aAAaH,KAAK,SAApC,+BAIII,EAAa,uBAAMN,SAAUlB,KAAKH,KAArB,UAChB,uBAAOsB,QAAQ,aACf,uBAAOE,YAAY,SAASP,GAAG,SAASX,KAAK,SAASC,MAAOJ,KAAKX,MAAMI,OAAQ6B,SAAUtB,KAAKN,eAC/F,uBAAO0B,KAAK,OAAOC,YAAY,iBAAiBP,GAAG,WAAWX,KAAK,YAAYC,MAAOJ,KAAKX,MAAMG,UAAW8B,SAAUtB,KAAKN,eAC3H,wBAAQ6B,UAAU,aAAaH,KAAK,SAApC,+BAGIK,EAAe,sBAAMP,SAAUlB,KAAKF,OAArB,SACnB,wBAAQsB,KAAK,SAASN,GAAG,SAASX,KAAK,SAAvC,uBAGN,OACE,sBAAKoB,UAAU,MAAf,UACGN,EACAO,EACAC,EACAnC,S,GA1FWoC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2f2a399.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n// const base_url = \"https://django-text-arcadephoto.herokuapp.com\"\n\nclass App extends Component {\n  constructor (props){\n      super(props);\n      this.state = {\n        text: [],\n        textInput: [],\n        editInput: [],\n        editID: \"\",\n      }\n\n\n  this.handleChange = this.handleChange.bind(this);\n  this.submit = this.submit.bind(this);\n  this.edit = this.edit.bind(this);\n  this.delete = this.delete.bind(this);\n    }\n\n\nhandleChange(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n\ncomponentDidMount(){\n  fetch(\"/api/v1/chatapp/chat/\")\n      .then(response => response.json())\n      .then(response => this.setState({text: response}));\n    }\n\n\nsubmit(){\n  fetch(\"/api/v1/chatapp/post/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.textInput}),\n    })\n}\n\nedit(){\n  fetch(`/api/v1/chatapp/${this.state.editID}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.editInput, id: this.state.editID}),\n    })\n}\n\ndelete(){\n  fetch(`/api/v1/chatapp/${this.state.editID}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.editInput, id: this.state.editID}),\n    })\n}\n\n\n\n  render(){\n    const text = this.state.text.map((data) => (\n      <p key={data.id}>{data.text} - ID No.: {data.id}</p>\n    ))\n\n\n    const textButton = <form onSubmit={this.submit}>\n       <label htmlFor=\"sendText\"></label>\n       <input type=\"text\" placeholder=\"Input text here\" id=\"sendText\" name=\"textInput\" value={this.state.textInput} onChange={this.handleChange}/>\n       <button className=\"btn genbtn\" type=\"submit\">Send your text</button>\n       </form>\n\n\n     const editButton = <form onSubmit={this.edit}>\n        <label htmlFor=\"editText\"></label>\n        <input placeholder=\"txt id\" id=\"editID\" name=\"editID\" value={this.state.editID} onChange={this.handleChange}/>\n        <input type=\"text\" placeholder=\"Edit text here\" id=\"editText\" name=\"editInput\" value={this.state.editInput} onChange={this.handleChange}/>\n        <button className=\"btn genbtn\" type=\"submit\">Send your edit</button>\n        </form>\n\n      const deleteButton = <form onSubmit={this.delete}>\n        <button type=\"submit\" id=\"delete\" name=\"delete\">Delete!</button></form>\n\n\n  return (\n    <div className=\"App\">\n      {textButton}\n      {editButton}\n      {deleteButton}\n      {text}\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}